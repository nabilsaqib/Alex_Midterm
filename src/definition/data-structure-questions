Please answer the below Data Structure Questions:

why do we need data structure?
A.Data structures are used to help us easily locate and retrieve information.

What are the various operations that can be performed on different Data Structures?
A. Traversing, Searching, Inserting, Deleting, Sorting, Merging.

List out the areas in which data structures are applied extensively?
A. Compiler Design, Operating System, Database Management System, Statistical analysis package, Numerical Analysis,
   Graphics, Artificial Intelligence, Simulation.

what is an Array?
A. Array is a data structure that contains a group of elements of the same data type.

what is the difference between the Array and ArrayList?
A. Array is a fixed length data structure while ArrayList is a variable length Collection class.

what is LinkedList?
A. linked list is a linear data structure in which the elements are not stored at contiguous memory locations rather
   they are linked using pointers

How is an Array different from Linked List?
A. Arrays are index based data structure where each element is associated with an index but Linked list relies on
  references where each node consists of the data and the references to the previous and next element.

what is queue?
A. Queue is an abstract data structure with both its ends. One end is always used to insert data
and the other is used to remove data.

what is stack?
A. It is a data structure that allows adding and removing elements in a particular order. Every time an element is
   added it goes on the top of the stack and the only element that can be removed is the element that is at
   the top of the stack.

what is FIFO and LIFO?
A. FIFO - First in first out
  LIFO - last in first out

what is the order of complexity?
A. It is a rough approximation of the number of steps necessary to execute program.

what is the best case to search an element from an array?
A. If element is in the first index.

what is the worst case to search an element from an array?
A. If element is in the last index or not in the array.

what is tree in data structure?
A. A tree is a collection of nodes connected by directed or undirected) edges. It is a nonlinear data structure.

what is graph in data structure?
A. A Graph is a finite set of vertices or nodes and set of Edges which connect a pair of nodes.

what is the difference between the HashTable and HashMap?
A. Hashtable is synchronized but HashMap is not.
   Hashtable does not allow null keys or values but HashMap allows one null key and any number of null values.

What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model.
A. A. RDBMS – Array
   Network data model – Graph
   Hierarchical data model – Trees

How HashMap works in java?
A. HashMap works through the principle of hashing which is a way of assigning a unique code for any variable/object
   after applying any algorithm on its properties.

What is ArrayIndexOutOfBoundsException in java? When it occurs?
A. A. It is an exception and it occurs when an array has been accessed with an illegal index.
   The index is either negative or greater than or equal to the size of the array.

What are the different ways of copying an array into another array?
A.  Manual Copy
    Arrays.copyOf()
    System.arraycopy()
    Object.clone

What is difference between an array and a linked list?
A. Arrays are index based data structure where each element is associated with an index but Linked list relies on
   references where each node consists of the data and the references to the previous and next element.

What is DFS and BFS?
A. DFS is depth first search and BFS is breadth first search. They are the two algorithms used for traversing and
   searching a node in a graph

What is Recursion?
A. Recursion is when a function calls itself directly or indirectly.

What are linear and non linear data Structures?
A. Linear Data Structures are where data items are organized sequentially or linearly and data elements are attached
  one after another. Non Linear Data Structures are where data items are not organized sequentially

What is Big-(O)-notation?
A. Big-(O)-notation describes the worst case scenario and can be used to describe the execution time required or
the space used in memory by an algorithm

Outlined different kind of sorting algorithm with time complexity?

A. Following is the time complexity shown from best to worst:
  Selection Sort Ω(n^2) θ(n^2) O(n^2)
  Bubble Sort Ω(n) θ(n^2) O(n^2)
  Insertion Sort Ω(n) θ(n^2) O(n^2)
  Heap Sort Ω(n log(n)) θ(n log(n)) O(n log(n))
  Quick Sort Ω(n log(n)) θ(n log(n)) O(n^2)
  Merge Sort Ω(n log(n)) θ(n log(n)) O(n log(n))
  Bucket Sort Ω(n+k) θ(n+k) O(n^2)
  Radix Sort Ω(nk) θ(nk) O(nk)

Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
  a)In terms of Accessing element.
  b)In terms of Inserting element.
  c)In terms of Searching element.
  d)In terms of Removing element.


